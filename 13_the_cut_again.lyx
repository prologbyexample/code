#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\use_default_options true
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "berasans" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype true
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize custom
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\paperwidth 6in
\paperheight 9in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip 10pt
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Backtracking After The Cut
\end_layout

\begin_layout Standard
The cut is sometimes mistakenly thought of as stopping all backtracking
 in the rule it appears.
 
\end_layout

\begin_layout Standard
The following example is designed to illustrate which backtracking can happen
 around a cut.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Prolog,basicstyle={\scriptsize\ttfamily},frame=lines,aboveskip={\bigskipamount}"
inline false
status open

\begin_layout Plain Layout

% Example 13 - The Cut With More Backtracking
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% main meal
\end_layout

\begin_layout Plain Layout

homemade(pizza).
 
\end_layout

\begin_layout Plain Layout

homemade(soup).
 
\end_layout

\begin_layout Plain Layout

homemade(fish).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% dessert
\end_layout

\begin_layout Plain Layout

ripe(apple).
 
\end_layout

\begin_layout Plain Layout

ripe(orange).
 
\end_layout

\begin_layout Plain Layout

ripe(banana).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% meal has tasty dish and ripe fruit
\end_layout

\begin_layout Plain Layout

meal(Main, Fruit) :- homemade(Main), !, ripe(Fruit).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The program establishes some facts and relations about what makes a nice
 meal.
 A meal consists of a homemade main dish, and fruit that is ripe.
 Pizza, soup and fish are homemade dishes.
 The apple, orange and banana are ripe.
\end_layout

\begin_layout Standard
We've placed a cut in the body of the rule defining a meal to explore its
 effect on backtracking.
 
\end_layout

\begin_layout Subsubsection*
Most General Query
\end_layout

\begin_layout Standard
A query where every paramater is a fresh unbound variable is called a 
\series bold
most general query
\series default
.
 Such queries ask for all possible solutions, and are a good way to test
 the generality of our prolog definitions.
 
\end_layout

\begin_layout Standard
Let's issue the most general query for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
meal/2
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Prolog,basicstyle={\scriptsize\ttfamily},frame=lines,aboveskip={\bigskipamount}"
inline false
status open

\begin_layout Plain Layout

?- meal(Main, Fruit).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Fruit = apple,
\end_layout

\begin_layout Plain Layout

Main = pizza
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Fruit = orange,
\end_layout

\begin_layout Plain Layout

Main = pizza
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Fruit = banana,
\end_layout

\begin_layout Plain Layout

Main = pizza
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Prolog has found three combinations that make a nice meal, pizza and apple,
 pizza and orange, pizza and banana.
 None of these has soup or fish as a main meal.
\end_layout

\begin_layout Standard
Clearly the cut had an effect on limiting the combinations to these three
 out of a possible nine.
 Let's find out how.
\end_layout

\begin_layout Subsubsection*
Backtracking and Not Backtracking
\end_layout

\begin_layout Standard
To find solutions for the query 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
meal(Main,Fruit)
\end_layout

\end_inset

 prolog uses its definition 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
homemade(Main),!,ripe(Fruit)
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
Working left to right, the first goal is 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
homemade(Main)
\end_layout

\end_inset

.
 This is easy enough to resolve as the database has several facts for homemade
 dishes.
 The first is 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
homemade(pizza)
\end_layout

\end_inset

, so 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Main=pizza
\end_layout

\end_inset

 is a candidate solution.
 
\end_layout

\begin_layout Standard
Having found one potential solution for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
homemade(Main)
\end_layout

\end_inset

, prolog then moves right along the definition 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
homemade(Main),!,ripe(Fruit)
\end_layout

\end_inset

.
 The next part is the cut.
 As we know, this always succeeds but has the side-effect of telling prolog
 to commit to any solutions found up to this point in the rule, and stop
 any backtracking back across it.
 That means prolog commits to 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Main=pizza
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
Moving right again, prolog next has to find solutions to 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ripe(Fruit)
\end_layout

\end_inset

.
 This is also straightforward because the database lists facts about ripe
 fruit.
 Prolog's answer above returns all three options for fruit.
 This shows that backtracking is enabled for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ripe(Fruit)
\end_layout

\end_inset

.
 This might seem wrong, but it is permitted because it takes place entirely
 to the right of the cut.
 That is, to find different solutions for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ripe(Fruit)
\end_layout

\end_inset

, prolog does not need to backtrack across the cut.
\end_layout

\begin_layout Standard
The following search tree illustrates which backtracking is allowed, and
 which is prevented by the cut.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename diagrams/13_the_cut_backtracking.pdf
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Key Points
\end_layout

\begin_layout Itemize
The most general query has all parameters as unbounded variables.
 
\end_layout

\begin_layout Itemize
Most general queries test the generality of a property's prolog definition.
\end_layout

\begin_layout Itemize
The cut does not prevent backtracking in a rule if it is entirely to the
 right of it.
\end_layout

\end_body
\end_document
